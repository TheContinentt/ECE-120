-- VHDL Entity my_project_lib.insert_coins.symbol
--
-- Created:
--          by - fzhang19.ews (eceb-2022-44.ews.illinois.edu)
--          at - 11:41:19 10/19/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY insert_coins IS
   PORT( 
      T   : IN     std_logic;
      clk : IN     std_logic;
      rst : IN     std_logic;
      set : IN     std_logic;
      A   : OUT    std_logic;
      P   : OUT    std_logic
   );

-- Declarations

END insert_coins ;

--
-- VHDL Architecture my_project_lib.insert_coins.struct
--
-- Created:
--          by - fzhang19.ews (eceb-2022-44.ews.illinois.edu)
--          at - 11:41:19 10/19/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY my_project_lib;

ARCHITECTURE struct OF insert_coins IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL O0   : std_logic;
   SIGNAL O1   : std_logic;
   SIGNAL O2   : std_logic;
   SIGNAL dout : std_logic;
   SIGNAL q    : std_logic;
   SIGNAL q1   : std_logic;
   SIGNAL q2   : std_logic;


   -- ModuleWare signal declarations(v1.9) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_1' of 'adff'
   SIGNAL mw_U_1reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_2' of 'adff'
   SIGNAL mw_U_2reg_cval : std_logic;

   -- Component Declarations
   COMPONENT lab6
   PORT (
      S0 : IN     std_logic ;
      S1 : IN     std_logic ;
      S2 : IN     std_logic ;
      A  : OUT    std_logic ;
      P  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT next_state_table
   PORT (
      S0 : IN     std_logic ;
      S1 : IN     std_logic ;
      S2 : IN     std_logic ;
      T  : IN     std_logic ;
      O0 : OUT    std_logic ;
      O1 : OUT    std_logic ;
      O2 : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : lab6 USE ENTITY my_project_lib.lab6;
   FOR ALL : next_state_table USE ENTITY my_project_lib.next_state_table;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_0' of 'adff'
   q1 <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_0reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_0reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_0reg_cval <= O1;
         END IF;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_1' of 'adff'
   q <= mw_U_1reg_cval;
   u_1seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_1reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_1reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_1reg_cval <= O0;
         END IF;
      END IF;
   END PROCESS u_1seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_2' of 'adff'
   q2 <= mw_U_2reg_cval;
   u_2seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_2reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_2reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_2reg_cval <= O2;
         END IF;
      END IF;
   END PROCESS u_2seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_3' of 'vdd'
   dout <= '1';

   -- Instance port mappings.
   U_4 : lab6
      PORT MAP (
         S0 => q,
         S1 => q1,
         S2 => q2,
         A  => A,
         P  => P
      );
   U_5 : next_state_table
      PORT MAP (
         S0 => q,
         S1 => q1,
         S2 => q2,
         T  => T,
         O0 => O0,
         O1 => O1,
         O2 => O2
      );

END struct;
